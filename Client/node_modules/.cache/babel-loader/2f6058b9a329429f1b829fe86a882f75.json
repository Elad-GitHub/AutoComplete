{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elad Cohen\\\\Desktop\\\\AutoComplete\\\\Client\\\\src\\\\AutoCompleteInput.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AutoCompleteInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChange = e => {\n      const value = e.target.value;\n      let suggestions = [];\n\n      if (value.length > 0) {\n        fetch('https://localhost:44315/api/Cities/' + e.target.value).then(response => response.json()).then(data => {\n          for (let i = 0; i < data.length; i++) {\n            suggestions.push(data[i][\"name\"] + ', ' + data[i][\"subCountry\"] + ', ' + data[i][\"country\"]);\n          }\n\n          this.setState(() => ({\n            suggestions\n          }));\n        });\n      }\n    };\n\n    this.state = {\n      suggestions: []\n    };\n  }\n\n  renderSuggestion() {\n    const {\n      suggestions\n    } = this.state;\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.suggestions.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 48\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n  showResults(e) {\n    var res = document.getElementById(\"result\");\n    res.innerHTML = '';\n\n    if (e.target.value === '') {\n      return;\n    }\n\n    let list = '';\n    fetch('https://localhost:44315/api/Cities/' + e.target.value).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      for (let i = 0; i < data.length; i++) {\n        list += '<li>' + data[i][\"name\"] + ', ' + data[i][\"subCountry\"] + ', ' + data[i][\"country\"] + '</li>';\n      }\n\n      res.innerHTML = '<ul>' + list + '</ul>';\n      return true;\n    }).catch(function (err) {\n      console.warn('Something went wrong.', err);\n      return false;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.onTextChange,\n        onKeyUp: this.showResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), this.renderSuggestion()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n} //suspend till user finish to type to minimize networke calls\n//typos - Though “iphone” is misspelled, the results flexibly assume what the user meant\n//category - For some terms, the user can drill down by category for a more specific search\n//unit tests\n//data source improvment - federated search","map":{"version":3,"sources":["C:/Users/Elad Cohen/Desktop/AutoComplete/Client/src/AutoCompleteInput.js"],"names":["React","AutoCompleteInput","Component","constructor","props","onTextChange","e","value","target","suggestions","length","fetch","then","response","json","data","i","push","setState","state","renderSuggestion","map","item","showResults","res","document","getElementById","innerHTML","list","catch","err","console","warn","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nexport default class AutoCompleteInput extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            suggestions: []\r\n        };\r\n    }\r\n\r\n    onTextChange = (e) => {\r\n        const value = e.target.value;\r\n        let suggestions = [];\r\n        \r\n        if(value.length > 0){\r\n            fetch('https://localhost:44315/api/Cities/' + e.target.value).then(response => \r\n                response.json()\r\n            ).then(data => {\r\n                for (let i = 0; i < data.length; i++) {\r\n                    suggestions.push(data[i][\"name\"] + ', ' + data[i][\"subCountry\"] + ', ' + data[i][\"country\"]);\r\n                } \r\n                this.setState(() => ({suggestions}));             \r\n            });\r\n        }\r\n    }\r\n\r\n    renderSuggestion(){\r\n        const { suggestions } = this.state;\r\n\r\n        if(suggestions.length === 0){\r\n            return null;\r\n        }\r\n\r\n        return(\r\n            <ul>\r\n                {this.suggestions.map((item => <li>{item}</li>))}\r\n            </ul> \r\n        );\r\n    }\r\n\r\n    showResults(e) {\r\n        var res = document.getElementById(\"result\");\r\n        \r\n        res.innerHTML = '';\r\n\r\n        if (e.target.value === '') {\r\n            return;\r\n        }\r\n\r\n        let list = '';  \r\n        \r\n        fetch('https://localhost:44315/api/Cities/' + e.target.value).then(function (response) {\r\n            return response.json();\r\n        }).then(function (data) {\r\n            for (let i = 0; i < data.length; i++) {\r\n                list += '<li>' + data[i][\"name\"] + ', ' + data[i][\"subCountry\"] + ', ' + data[i][\"country\"] +  '</li>';\r\n            }\r\n            res.innerHTML = '<ul>' + list + '</ul>';\r\n            return true;\r\n        }).catch(function (err) {\r\n            console.warn('Something went wrong.', err);\r\n            return false;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"text\" onChange={this.onTextChange} onKeyUp={this.showResults} />\r\n                {this.renderSuggestion()}\r\n                {/* <div id=\"result\"></div> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//suspend till user finish to type to minimize networke calls\r\n//typos - Though “iphone” is misspelled, the results flexibly assume what the user meant\r\n//category - For some terms, the user can drill down by category for a more specific search\r\n//unit tests\r\n//data source improvment - federated search"]},"metadata":{},"sourceType":"module"}