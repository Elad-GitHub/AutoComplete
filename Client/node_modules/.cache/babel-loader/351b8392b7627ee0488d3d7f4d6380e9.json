{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elad Cohen\\\\Desktop\\\\AutoComplete\\\\Client\\\\src\\\\AutoCompleteInput.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AutoCompleteInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChange = e => {\n      const value = e.target.value;\n\n      if (value.length === 0) {\n        this.setState(() => ({\n          suggestions: []\n        }));\n      } else {\n        const suggestions = [];\n        fetch('https://localhost:44315/api/Cities/' + e.target.value).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          for (let i = 0; i < data.length; i++) {\n            suggestions.push(data[i][\"name\"] + ', ' + data[i][\"subCountry\"] + ', ' + data[i][\"country\"]);\n          }\n\n          res.innerHTML = '<ul>' + list + '</ul>';\n          return true;\n        }).catch(function (err) {\n          console.warn('Something went wrong.', err);\n          return false;\n        });\n      }\n    };\n\n    this.state = {\n      suggestions: []\n    };\n  }\n\n  showResults(e) {\n    var res = document.getElementById(\"result\");\n    res.innerHTML = '';\n\n    if (e.target.value === '') {\n      return;\n    }\n\n    let list = '';\n    fetch('https://localhost:44315/api/Cities/' + e.target.value).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      for (let i = 0; i < data.length; i++) {\n        list += '<li>' + data[i][\"name\"] + ', ' + data[i][\"subCountry\"] + ', ' + data[i][\"country\"] + '</li>';\n      }\n\n      res.innerHTML = '<ul>' + list + '</ul>';\n      return true;\n    }).catch(function (err) {\n      console.warn('Something went wrong.', err);\n      return false;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.onTextChange,\n        onKeyUp: this.showResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n} //suspend till user finish to type to minimize networke calls\n//typos - Though “iphone” is misspelled, the results flexibly assume what the user meant\n//category - For some terms, the user can drill down by category for a more specific search\n//unit tests\n//data source improvment - federated search","map":{"version":3,"sources":["C:/Users/Elad Cohen/Desktop/AutoComplete/Client/src/AutoCompleteInput.js"],"names":["React","AutoCompleteInput","Component","constructor","props","onTextChange","e","value","target","length","setState","suggestions","fetch","then","response","json","data","i","push","res","innerHTML","list","catch","err","console","warn","state","showResults","document","getElementById","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nexport default class AutoCompleteInput extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            suggestions: []\r\n        };\r\n    }\r\n\r\n    onTextChange = (e) => {\r\n        const value = e.target.value;\r\n\r\n        if(value.length === 0){\r\n            this.setState(() => ({\r\n                suggestions: []\r\n            }))\r\n        }else{\r\n            const suggestions = [];\r\n            fetch('https://localhost:44315/api/Cities/' + e.target.value).then(function (response) {\r\n                return response.json();\r\n            }).then(function (data) {\r\n                for (let i = 0; i < data.length; i++) {\r\n                    suggestions.push(data[i][\"name\"] + ', ' + data[i][\"subCountry\"] + ', ' + data[i][\"country\"]);\r\n                }\r\n                res.innerHTML = '<ul>' + list + '</ul>';\r\n                return true;\r\n            }).catch(function (err) {\r\n                console.warn('Something went wrong.', err);\r\n                return false;\r\n            });\r\n        }\r\n    }\r\n\r\n    showResults(e) {\r\n        var res = document.getElementById(\"result\");\r\n        \r\n        res.innerHTML = '';\r\n\r\n        if (e.target.value === '') {\r\n            return;\r\n        }\r\n\r\n        let list = '';  \r\n        \r\n        fetch('https://localhost:44315/api/Cities/' + e.target.value).then(function (response) {\r\n            return response.json();\r\n        }).then(function (data) {\r\n            for (let i = 0; i < data.length; i++) {\r\n                list += '<li>' + data[i][\"name\"] + ', ' + data[i][\"subCountry\"] + ', ' + data[i][\"country\"] +  '</li>';\r\n            }\r\n            res.innerHTML = '<ul>' + list + '</ul>';\r\n            return true;\r\n        }).catch(function (err) {\r\n            console.warn('Something went wrong.', err);\r\n            return false;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"text\" onChange={this.onTextChange} onKeyUp={this.showResults} />\r\n                <div id=\"result\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//suspend till user finish to type to minimize networke calls\r\n//typos - Though “iphone” is misspelled, the results flexibly assume what the user meant\r\n//category - For some terms, the user can drill down by category for a more specific search\r\n//unit tests\r\n//data source improvment - federated search"]},"metadata":{},"sourceType":"module"}